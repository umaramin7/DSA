class Solution {
  public:
  int countNodes(struct Node* root){
      if(root==NULL){
          return 0;
      }
      int ans =1+ countNodes(root-> left) + countNodes(root->right);
      return ans;
  }
  bool isCBT(struct Node* root,int index,int totalcount){
      if(root==NULL){
          return true;
      }
      if(index>=totalcount){
          return false;
      }
      else{
          bool left=isCBT(root->left,2*index+1,totalcount);
          bool right=isCBT(root-> right,2*index+2,totalcount);
          return (left && right);
      }
  }
  bool ismaxorder(struct Node* root){
      //leafnode
      if(root->left== NULL && root -> right == NULL){
          return true;
      }
      //if only left node
      if(root->right== NULL){
          return (root->data > root-> left -> data);
      }
      else{
          bool left = ismaxorder(root-> left);
          bool right = ismaxorder(root-> right);
          
          return(left && right &&
          root-> data> root -> left-> data && root -> data > root -> right -> data );
      }
  }
    bool isHeap(struct Node* tree) {
        // code here
        int index = 0;
        int totalcount= countNodes(tree);
        
        if(isCBT(tree,index,totalcount) && ismaxorder(tree)){
            return true;
        }
        else{
            return false;
        }
    }
};
